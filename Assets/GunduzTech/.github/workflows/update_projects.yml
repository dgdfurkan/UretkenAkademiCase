name: Update Game Projects

on:
  push:
    branches:
      - main

jobs:
  get-repos:
    runs-on: ubuntu-latest
    outputs:
      final_repos: ${{ steps.filter-repos.outputs.final_repos }}
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "frkngndz60@gmail.com"
          git config --global user.name "dgdfurkan"
      
      - name: Check for repositories with GunduzTech inside Assets
        id: filter-repos
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          echo "Fetching repository list..."
          REPO_LIST=$(curl -s -H "Authorization: token ${GH_PAT}" "https://api.github.com/user/repos?per_page=100&affiliation=owner" | jq -r '.[] | select(.default_branch == "main") | .name')
          
          FINAL_REPOS=()
          for repo in $REPO_LIST; do
            echo "Checking $repo for Assets/GunduzTech directory..."
            
            # Use GitHub API to check if the Assets/GunduzTech directory exists without cloning
            DIR_CHECK=$(curl -s -H "Authorization: token ${GH_PAT}" "https://api.github.com/repos/dgdfurkan/$repo/contents/Assets/GunduzTech")

            if [[ "$DIR_CHECK" != *"Not Found"* && "$DIR_CHECK" != *"404"* ]]; then
              FINAL_REPOS+=("$repo")
              echo "$repo uses Assets/GunduzTech."
            else
              echo "Skipping $repo, no Assets/GunduzTech found."
            fi
          done
          
          echo "FINAL_REPOS=${FINAL_REPOS[*]}" >> $GITHUB_ENV
          echo "final_repos=$(IFS=, ; echo "${FINAL_REPOS[*]}")" >> $GITHUB_OUTPUT

  update-repos:
    needs: get-repos
    runs-on: ubuntu-latest
    steps:
      - name: Configure Git
        run: |
          git config --global user.email "frkngndz60@gmail.com"
          git config --global user.name "dgdfurkan"
      
      - name: Update All GunduzTech-based projects (Inside Assets)
        env:
          GH_PAT: ${{ secrets.GH_PAT }}
        run: |
          IFS=',' read -r -a REPO_ARRAY <<< "${{ needs.get-repos.outputs.final_repos }}"
          
          for repo in "${REPO_ARRAY[@]}"; do
            if [[ -n "$repo" && "$repo" != " " ]]; then
              echo "Updating $repo..."
              git clone https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/$repo.git
              cd $repo
              
              if [ -d "Assets/GunduzTech" ]; then
                git checkout main
                git pull origin main
                
                if ! git ls-tree -d HEAD Assets/GunduzTech >/dev/null 2>&1; then
                  git subtree add --prefix=Assets/GunduzTech https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/GunduzTech.git main --squash
                else
                  git subtree pull --prefix=Assets/GunduzTech https://${{ secrets.GH_PAT }}@github.com/dgdfurkan/GunduzTech.git main --squash
                fi
                
                git add .
                git commit -m "Auto-update GunduzTech inside Assets" || echo "No changes to commit"
                git push origin main
              fi
              
              cd ..
              rm -rf $repo
            fi
          done
